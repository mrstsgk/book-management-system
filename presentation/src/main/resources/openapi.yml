openapi: 3.0.3
info:
  title: Book Management System API
  description: 書籍管理システムのAPI仕様書
  version: 1.0.0

servers:
  - url: http://localhost:8080
    description: Local Development Server

paths:
  /api/authors:
    post:
      tags:
        - Authors
      summary: 著者を作成する
      operationId: createAuthor
      description: |
        生年月日は現在より過去日付
      requestBody:
        description: 登録する著者の情報
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAuthorRequestModel'
      responses:
        '200':
          description: 著者の作成に成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorResponseModel'
        '400':
          description: リクエストのバリデーションエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponseModel'

  /api/authors/{id}:
    put:
      tags:
        - Authors
      summary: 著者を更新する
      operationId: updateAuthor
      description: |
        生年月日は現在より過去日付
      parameters:
        - name: id
          in: path
          required: true
          description: 更新する著者のID
          schema:
            type: integer
            format: int32
      requestBody:
        description: 更新する著者の情報
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAuthorRequestModel'
      responses:
        '200':
          description: 著者の更新に成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorResponseModel'
        '400':
          description: リクエストのバリデーションエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponseModel'
        '404':
          description: 著者が見つからない場合
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponseModel'

  /api/books:
    post:
      tags:
        - Books
      summary: 書籍を作成する
      operationId: createBook
      description: |
        - 書籍価格は0以上
        - 著者は1人以上
        - 出版ステータスは出版済みから未出版に変更できない
      requestBody:
        description: 登録する書籍の情報
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBookRequestModel'
      responses:
        '200':
          description: 書籍の作成に成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookResponseModel'
        '400':
          description: リクエストのバリデーションエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponseModel'

components:
  schemas:
    CreateAuthorRequestModel:
      type: object
      description: 著者登録APIのリクエスト情報
      properties:
        name:
          type: string
          description: 著者名
          example: 太宰治
        birthDate:
          type: string
          format: date
          description: 生年月日
          x-field-extra-annotation: "@field:com.bookmanagementsystem.usecase.validation.PastOnly"
          example: "1909-06-19"
      required:
        - name

    UpdateAuthorRequestModel:
      type: object
      description: 著者更新APIのリクエスト情報
      properties:
        name:
          type: string
          description: 著者名
          example: 太宰治
        birthDate:
          type: string
          format: date
          description: 生年月日
          x-field-extra-annotation: "@field:com.bookmanagementsystem.usecase.validation.PastOnly"
          example: "1909-06-19"
      required:
        - name

    CreateBookRequestModel:
      type: object
      description: 書籍登録APIのリクエスト情報
      properties:
        title:
          type: string
          description: 書籍タイトル
          example: "人間失格"
        price:
          type: integer
          format: int64
          minimum: 0
          description: 書籍価格
          example: 1500
        authorIds:
          type: array
          minItems: 1
          items:
            type: integer
            format: int32
          description: 著者IDのリスト
        status:
          $ref: '#/components/schemas/BookStatus'
      required:
        - title
        - price
        - authorIds
        - status

    AuthorResponseModel:
      type: object
      description: 著者のAPIで汎用的に使用するレスポンス情報
      properties:
        id:
          type: integer
          format: int32
          description: 著者ID
          example: 1
        name:
          type: string
          description: 著者名
          example: 太宰治
        birthDate:
          type: string
          format: date
          description: 生年月日
          x-field-extra-annotation: "@field:com.bookmanagementsystem.usecase.validation.PastOnly"
          example: "1909-06-19"
      required:
        - id
        - name

    BookResponseModel:
      type: object
      description: 書籍のAPIで汎用的に使用するレスポンス情報
      properties:
        id:
          type: integer
          format: int32
          description: 書籍ID
          example: 1
        title:
          type: string
          description: 書籍タイトル
          example: "人間失格"
        price:
          type: integer
          format: int64
          minimum: 0
          maximum: 9999999999
          description: 書籍価格
          example: 1500
        authors:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/AuthorResponseModel'
          description: 著者のリスト
        status:
          $ref: '#/components/schemas/BookStatus'
      required:
        - id
        - title
        - price
        - authors
        - status

    BookStatus:
      type: integer
      format: int32
      description: 出版ステータス
      enum:
        - 1
        - 2
      example: 1
      x-enum-varnames:
        - PUBLISHED
        - UNPUBLISHED

    BadRequestErrorResponseModel:
      type: object
      description: リクエストのバリデーションエラー
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorModel'

    NotFoundErrorResponseModel:
      type: object
      description: 汎用的なエラーレスポンス
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorModel'

    ErrorModel:
      type: object
      description: エラー情報
      properties:
        code:
          type: string
          description: エラーコード
          example: "AUTHOR_NOT_FOUND"
        message:
          type: string
          description: エラーメッセージ
          example: "指定された著者が見つかりません"