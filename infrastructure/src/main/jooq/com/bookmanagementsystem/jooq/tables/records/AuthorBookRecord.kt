/*
 * This file is generated by jOOQ.
 */
package com.bookmanagementsystem.jooq.tables.records


import com.bookmanagementsystem.jooq.tables.AuthorBook

import org.jooq.Record2
import org.jooq.impl.UpdatableRecordImpl


/**
 * 著者と書籍の中間テーブル（多対多対応）
 */
@Suppress("UNCHECKED_CAST")
open class AuthorBookRecord() : UpdatableRecordImpl<AuthorBookRecord>(AuthorBook.AUTHOR_BOOK) {

    open var authorId: Int?
        set(value): Unit = set(0, value)
        get(): Int? = get(0) as Int?

    open var bookId: Int?
        set(value): Unit = set(1, value)
        get(): Int? = get(1) as Int?

    open var version: Int?
        set(value): Unit = set(2, value)
        get(): Int? = get(2) as Int?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record2<Int?, Int?> = super.key() as Record2<Int?, Int?>

    /**
     * Create a detached, initialised AuthorBookRecord
     */
    constructor(authorId: Int? = null, bookId: Int? = null, version: Int? = null): this() {
        this.authorId = authorId
        this.bookId = bookId
        this.version = version
        resetChangedOnNotNull()
    }

    /**
     * Create a detached, initialised AuthorBookRecord
     */
    constructor(value: com.bookmanagementsystem.jooq.tables.pojos.AuthorBook?): this() {
        if (value != null) {
            this.authorId = value.authorId
            this.bookId = value.bookId
            this.version = value.version
            resetChangedOnNotNull()
        }
    }
}
