/*
 * This file is generated by jOOQ.
 */
package com.bookmanagementsystem.jooq.keys


import com.bookmanagementsystem.jooq.tables.Author
import com.bookmanagementsystem.jooq.tables.AuthorBook
import com.bookmanagementsystem.jooq.tables.Book
import com.bookmanagementsystem.jooq.tables.records.AuthorBookRecord
import com.bookmanagementsystem.jooq.tables.records.AuthorRecord
import com.bookmanagementsystem.jooq.tables.records.BookRecord

import org.jooq.ForeignKey
import org.jooq.UniqueKey
import org.jooq.impl.DSL
import org.jooq.impl.Internal



// -------------------------------------------------------------------------
// UNIQUE and PRIMARY KEY definitions
// -------------------------------------------------------------------------

val AUTHOR_PKEY: UniqueKey<AuthorRecord> = Internal.createUniqueKey(Author.AUTHOR, DSL.name("author_pkey"), arrayOf(Author.AUTHOR.ID), true)
val AUTHOR_BOOK_PKEY: UniqueKey<AuthorBookRecord> = Internal.createUniqueKey(AuthorBook.AUTHOR_BOOK, DSL.name("author_book_pkey"), arrayOf(AuthorBook.AUTHOR_BOOK.BOOK_ID, AuthorBook.AUTHOR_BOOK.AUTHOR_ID), true)
val BOOK_PKEY: UniqueKey<BookRecord> = Internal.createUniqueKey(Book.BOOK, DSL.name("book_pkey"), arrayOf(Book.BOOK.ID), true)

// -------------------------------------------------------------------------
// FOREIGN KEY definitions
// -------------------------------------------------------------------------

val AUTHOR_BOOK__AUTHOR_BOOK_AUTHOR_ID_FKEY: ForeignKey<AuthorBookRecord, AuthorRecord> = Internal.createForeignKey(AuthorBook.AUTHOR_BOOK, DSL.name("author_book_author_id_fkey"), arrayOf(AuthorBook.AUTHOR_BOOK.AUTHOR_ID), com.bookmanagementsystem.jooq.keys.AUTHOR_PKEY, arrayOf(Author.AUTHOR.ID), true)
val AUTHOR_BOOK__AUTHOR_BOOK_BOOK_ID_FKEY: ForeignKey<AuthorBookRecord, BookRecord> = Internal.createForeignKey(AuthorBook.AUTHOR_BOOK, DSL.name("author_book_book_id_fkey"), arrayOf(AuthorBook.AUTHOR_BOOK.BOOK_ID), com.bookmanagementsystem.jooq.keys.BOOK_PKEY, arrayOf(Book.BOOK.ID), true)
